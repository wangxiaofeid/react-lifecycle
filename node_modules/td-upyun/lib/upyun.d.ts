/// <reference types="node" />
import { Service } from './service';
import { headerSignGetter } from './sign';
import * as fs from 'fs';
export interface Params {
    domain?: string;
    protocol?: string;
}
export declare class Client {
    private endpoint;
    private service;
    private req;
    constructor(service: Service, params?: Params, getHeaderSign?: headerSignGetter);
    usage(path?: string): Promise<{}>;
    listDir(path?: string, {limit, order, iter}?: {
        limit?: number;
        order?: string;
        iter?: string;
    }): Promise<{}>;
    makeDir(remotePath: string): Promise<{}>;
    headFile(remotePath: string): Promise<{}>;
    deleteFile(remotePath: string, isAsync?: boolean): Promise<{}>;
    deleteDir(...args: any[]): any;
    putFile(remotePath: string, localFile: fs.ReadStream, options?: any): Promise<{}>;
    getFile(remotePath: string, saveStream?: fs.WriteStream): Promise<{}>;
}
