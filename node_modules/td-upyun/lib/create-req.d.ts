/// <reference types="request-promise" />
import * as rq from 'request-promise';
import { Service } from './service';
export interface ReqOption {
    endpoint: string;
    service: Service;
    getHeaderSign: (service: Service, method: string, path: string, contentMd5?: string | null) => any;
}
export declare class Req {
    private baseURL;
    private service;
    private getHeaderSign;
    constructor(options: ReqOption);
    get(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    post(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    put(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    head(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    delete(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    patch(uri: string, options?: rq.RequestPromiseOptions | undefined): rq.RequestPromise;
    private genOptions(uri, method, options?);
}
export default function (options: ReqOption): Req;
